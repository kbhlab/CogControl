mutate(language = fct_rev(as.factor(language))) %>%
mutate(total_vocab_prod = as.numeric(total_vocab_prod)) %>%
mutate(total_concept_prod = as.numeric(total_concept_prod)) %>%
mutate(recording_name = as_factor(recording_name)) %>%
mutate(gender = as.factor(gender)) %>%
group_by(language) %>%
mutate(median_by_group = median(total_concept_prod,na.rm = T)) %>%
mutate(vocab_group = ifelse(median_by_group > total_concept_prod,
"Low",
"High")) %>%
mutate(vocab_group = as.factor(vocab_group))
## Convert data from wide to long, and then from long to wide
tobii_data_clean <- tobii_data %>%
gather(AOI, looking_time, Test_1_Circle:Training_9_Target) %>%
separate(AOI,into = c("trial_type", "trial_number", "AOI")) %>%
spread(AOI, looking_time) %>%
## Change to proper variable types and rename variables
mutate(trial_type = fct_rev(as.factor(trial_type))) %>%
mutate(trial_number = as.numeric(trial_number)) %>%
mutate(trial_type = dplyr::recode(trial_type, "Test" = "post-switch", "Training" = "pre-switch")) %>%
## calculate the total looking time
mutate(total_looking_time = Circle + Distractor + Target) %>%
## Determine whether baby was attending during minimum proportion of anticipatory period
mutate(good_trial = ifelse(total_looking_time >= MIN_LOOK_PROPORTION, "good", "bad")) %>%
filter(good_trial == "good") %>%
group_by(recording_name, trial_type) %>%
mutate(num_good_trial = length(recording_name)) %>%
## Determine whether baby had the minimum number of good trials & only keep babies with data from pre-switch AND post-switch conditions
filter(num_good_trial >= MIN_NUMBER_TRIALS) %>%
group_by(recording_name) %>%
mutate(good_baby = length(unique(trial_type))) %>%
filter(good_baby == 2) %>%
## Categorize trials as correct, incorrect, or no anticipation (the way Kovacs did it)
mutate(correct_anticipation = ifelse(Target > Distractor, 1, 0)) %>% #trials where baby looked at correct side longer than incorrect side
mutate(incorrect_anticipation = ifelse(Distractor > Target, 1, 0)) %>% #trials where baby looked at incorrect side longer than correct side
mutate(no_anticipation = ifelse(Target + Distractor == 0, 1, 0)) %>% #trials where baby doesn't look at target or distractor
mutate(total_anticipation = 1-no_anticipation) %>% #trials where there is anticipation to either side
mutate(prop_target_v_distract = Target/(Target+Distractor)) #actual proportion of time spent looking at target vs looks to other side (but not circle)
## Merge tobii data with Master Subject List
trial_data_all <- merge(tobii_data_clean, ms_list, by = "recording_name") #%>% filter(no_anticipation == 0)
## Calculate proportion of correct anticipations by age group, trial type, and trial number - SUMMARY MEANS
proportion_correct_anticipation <- trial_data_all %>%
group_by(age_group, language, trial_type, trial_number) %>%
summarise(proportion = mean(correct_anticipation, na.rm = T),
num_datapoints = length(recording_name))
## Anticipations by block, including only trials with anticipations
block_data <- trial_data_all %>%
mutate(block_num = (as.numeric(trial_number)+2) %/% 3) %>%
mutate(block_num = as.factor(block_num)) %>%
group_by(recording_name, language,
trial_type, block_num, age_group) %>%
rename(cor_anticipation = correct_anticipation) %>%
summarise(num_trials_contributed = length(cor_anticipation),
correct_anticipation = mean(cor_anticipation, na.rm = T),
total_anticipation = mean(total_anticipation)) %>%
group_by(recording_name, trial_type) %>%
mutate(n_blocks = length(unique(block_num)))
trial_data_all %>%
group_by(age_group, language) %>%
summarize(num_participants = n_distinct(recording_name))
block_data %>%
group_by(language, age_group, trial_type, block_num) %>%
summarise(correct_anticipation = mean(correct_anticipation), num_trials_contributed = mean(num_trials_contributed))
library(cowplot)
hist_data <- trial_data_all %>% filter(trial_number == 1 | trial_number == 9) %>% mutate(trial_number = dplyr::recode(trial_number, `1` = "Trial 1", `9` = "Trial 9"))
hist_7_mono <- hist_data %>% filter(age_group == "7 months") %>% filter(language == "Monolinguals") %>%ggplot(., aes(x = prop_target_v_distract)) +
geom_histogram() +
ylim(0, 15) +
facet_grid(trial_type ~ trial_number) +
ggtitle("7 Month Monolinguals")
hist_7_bi <- hist_data %>% filter(age_group == "7 months") %>% filter(language == "Bilinguals") %>%ggplot(., aes(x = prop_target_v_distract)) +
geom_histogram() +
ylim(0, 15) +
facet_grid(trial_type ~ trial_number) +
ggtitle("7 Month Bilinguals")
hist_20_mono <- hist_data %>% filter(age_group == "20 months") %>% filter(language == "Monolinguals") %>%ggplot(., aes(x = prop_target_v_distract)) +
geom_histogram() +
ylim(0, 15) +
facet_grid(trial_type ~ trial_number) +
ggtitle("20 Month Monolinguals")
hist_20_bi <- hist_data %>% filter(age_group == "20 months") %>% filter(language == "Bilinguals") %>%ggplot(., aes(x = prop_target_v_distract)) +
geom_histogram() +
ylim(0, 15) +
facet_grid(trial_type ~ trial_number) +
ggtitle("20 Month Bilinguals")
histograms <- plot_grid(hist_7_mono, hist_7_bi, hist_20_mono, hist_20_bi, labels = "auto", align = "vh", ncol = 2)
histograms
data_points <- trial_data_all %>%
group_by(language, age_group, trial_type, trial_number) %>% filter(!is.na(prop_target_v_distract)) %>%
summarise(num_data_points = n_distinct(recording_name)) %>% arrange(num_data_points)
data_points
prop_looking_time_figure <- trial_data_all %>%
ggplot(aes(x = trial_number, y = prop_target_v_distract, color = language, shape = language, linetype = language)) +
geom_jitter(alpha = 0.5, height = 0, width = 0.5) +
facet_grid(age_group ~ trial_type) +
scale_x_discrete(limits = c(1:9)) +
scale_y_continuous(limits = c(0:1)) +
theme_bw(base_size=15) +
scale_color_manual(values = c("#ff3300", # bilingual colour
"#070707")) + # mono colour
xlab("Trial number") +
ylab("Proportion of time looking at \n target vs. distractor")
prop_looking_time_figure
prop_infants_figure <- proportion_correct_anticipation %>%
ggplot(aes(x = trial_number, y = proportion, color = language, shape = language, linetype = language)) +
stat_summary(fun.y = "mean", geom = "point") +
stat_smooth(se = FALSE) +
facet_grid(age_group ~ trial_type) +
scale_x_discrete(limits = c(1:9)) +
scale_y_continuous(limits = c(0:1)) +
theme_bw(base_size=15) +
scale_color_manual(values = c("#ff3300", # bilingual colour
"#070707")) + # mono colour
xlab("Trial number") +
ylab("Proportion of infants with \ncorrect anticipation")
prop_infants_figure
blocks_figure <- block_data %>%
ggplot(aes(x = block_num, y = correct_anticipation, fill = language)) +
stat_summary(fun.y = "mean", geom = "bar", position = "dodge") +
facet_grid(age_group ~ trial_type) +
scale_y_continuous(limits = c(0:1)) +
theme_bw(base_size=15) +
scale_fill_manual(values = c("#ff3300", # bilingual colour
"#070707")) + # mono colour
xlab("Block number") +
ylab("Proportion of infants with \ncorrect anticipation")
blocks_figure
total_antic_figure <- block_data %>%
ggplot(aes(x = block_num, y = total_anticipation, fill = language)) +
stat_summary(fun.y = "mean", geom = "bar", position = "dodge") +
facet_grid(age_group ~ trial_type) +
scale_y_continuous(limits = c(0:1)) +
theme_bw(base_size=15) +
scale_fill_manual(values = c("#ff3300", # bilingual colour
"#070707")) + # mono colour
xlab("Block number") +
ylab("Proportion of infants with \nany anticipation")
total_antic_figure
# mean length of any anticipation for each combination of language group/trial type/age group
total_ant_summary <- trial_data_all %>%
group_by(language, trial_type, age_group) %>%
summarize(mean_total_ant = mean(total_anticipation, na.rm = TRUE))
total_ant_summary
#do monolinguals and bilinguals differ in total anticipation across blocks?
pre_7_total_ant <- block_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = total_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
pre_7_total_ant
post_7_total_ant <- block_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = total_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
post_7_total_ant
pre_20_total_ant <- block_data %>%
filter(age_group == "20 months") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = total_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
pre_20_total_ant
post_20_total_ant <- block_data %>%
filter(age_group == "20 months") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = total_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
post_20_total_ant
## ANOVA by block: 7m pre-switch
pre_7 <- block_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
pre_7_mono <-  block_data %>%
filter(age_group == "7 months") %>%
filter(language == "Monolinguals") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
pre_7_bi <-  block_data %>%
filter(age_group == "7 months") %>%
filter(language == "Bilinguals") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
## ANOVA by block: 7m post-switch
post_7 <- block_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
post_7_mono <-  block_data %>%
filter(age_group == "7 months") %>%
filter(language == "Monolinguals") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
post_7_bi <-  block_data %>%
filter(age_group == "7 months") %>%
filter(language == "Bilinguals") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
## ANOVA by block: 20m pre-switch
pre_20 <- block_data %>%
filter(age_group == "20 months") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
pre_20_mono <-  block_data %>%
filter(age_group == "20 months") %>%
filter(language == "Monolinguals") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
pre_20_bi <-  block_data %>%
filter(age_group == "20 months") %>%
filter(language == "Bilinguals") %>%
filter(trial_type == "pre-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
## ANOVA by block: 20m post-switch
post_20 <- block_data %>%
filter(age_group == "20 months") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
between = language,
detailed = TRUE,
type = 3)
post_20_mono <-  block_data %>%
filter(age_group == "20 months") %>%
filter(language == "Monolinguals") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
post_20_bi <-  block_data %>%
filter(age_group == "20 months") %>%
filter(language == "Bilinguals") %>%
filter(trial_type == "post-switch") %>%
filter(n_blocks == 3) %>%
ezANOVA(data = .,
dv = correct_anticipation,
wid = recording_name,
within = block_num,
detailed = TRUE,
type = 3)
library(apaTables)
apa.ezANOVA.table(pre_7)
apa.ezANOVA.table(pre_7_mono)
apa.ezANOVA.table(pre_7_bi)
apa.ezANOVA.table(post_7)
apa.ezANOVA.table(post_7_mono)
apa.ezANOVA.table(post_7_bi)
apa.ezANOVA.table(pre_20)
apa.ezANOVA.table(pre_20_mono)
apa.ezANOVA.table(pre_20_bi)
apa.ezANOVA.table(post_20)
apa.ezANOVA.table(post_20_mono)
apa.ezANOVA.table(post_20_bi)
block_data %>%
filter(block_num !=2) %>%
group_by(recording_name, age_group, language, trial_type) %>%
mutate(n_blocks = length(block_num)) %>%
filter(n_blocks == 2) %>%
group_by(age_group, language, trial_type) %>%
do(broom::tidy(t.test(.$correct_anticipation ~ .$block_num, data = ., paired = TRUE))) %>%
mutate(cohen_d = statistic/sqrt(parameter +1)) %>%
mutate_if(is.numeric, funs(round(., 3)))
#make proportion data milliseconds instead of seconds so the binomial function will work properly (doesn't like non-integer values) -- WARNING this could be a mistake, since telling the model that the proportions come from milliseconds instead of seconds increases the 'trustworthiness' of the proportions, and completely changes the results of the model when compared to running the exact same model with seconds instead of milliseconds
model_data <- trial_data_all %>%
mutate(Target = Target * 1000) %>%
mutate(Distractor = Distractor * 1000) %>%
mutate(Target_plus_Distractor = Target + Distractor) %>%
mutate(prop_for_model = Target/Target_plus_Distractor) %>%
#mutate(trial_number = as.factor(trial_number)) %>% don't do this!
filter(total_anticipation == 1)
model_data_figure <- model_data %>%
mutate(trial_number = as.numeric(trial_number)) %>%
group_by(age_group, language, trial_type, trial_number) %>%
summarise(prop_for_model = mean(prop_for_model, na.rm = T)) %>%
ggplot(aes(x = trial_number, y = prop_for_model, color = language, shape = language, linetype = language)) +
stat_summary(fun.y = "mean", geom = "point") +
stat_smooth(se = FALSE) +
facet_grid(age_group ~ trial_type) +
scale_x_discrete(limits = c(1:9)) +
scale_y_continuous(limits = c(0:1)) +
theme_bw(base_size=15) +
scale_color_manual(values = c("#ff3300", # bilingual colour
"#070707")) + # mono colour
ggtitle("Data used for glmer model \n(proportion of looking time)") +
xlab("Trial number") +
ylab("Proportion of time spent looking at \ntarget v distractor")
prop_infants_figure <- prop_infants_figure + ggtitle("Data used for replication analysis \n(proportion of babies looking more at target)")
plot_grid(model_data_figure, prop_infants_figure, labels = "auto", nrow = 2)
model1 <- glmer(prop_for_model ~ language * age_group * trial_type + (1 | recording_name), data = model_data, weights = Target_plus_Distractor, family = "binomial")
summary(model1)
plot(allEffects(model1))
plot(predictorEffects(model1))
emmeans(model1, pairwise ~ age_group)
emmeans(model1, pairwise ~ age_group:language|trial_type)
emmeans(model1, pairwise ~ age_group:trial_type|language)
emmeans(model1, pairwise ~ age_group:trial_type|language)
plot(predictorEffects(model1))
model_data_7 <- model_data %>% filter(age_group == "7 months")
model2 <- glmer(prop_for_model ~ language * trial_type * trial_number + (1 | recording_name), data = model_data_7, weights = Target_plus_Distractor, family = "binomial", control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=100000)))
summary(model2)
emmeans(model2, pairwise ~ trial_number)
emmeans(model2, pairwise ~ language:trial_type)
model_data_20 <- model_data %>% filter(age_group == "20 months")
model3 <- glmer(prop_for_model ~ language * trial_type + trial_number + (1 | recording_name), data = model_data_20, weights = Target_plus_Distractor, family = "binomial", control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=100000)))
summary(model3)
emmeans(model3, pairwise ~ trial_number)
emmeans(model3, pairwise ~ language:trial_type)
model_data_7 <- model_data %>% filter(age_group == "7 months")
model2 <- glmer(prop_for_model ~ language * trial_type * trial_number + (1 | recording_name), data = model_data_7, weights = Target_plus_Distractor, family = "binomial", control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=100000)))
summary(model2)
emmeans(model2, pairwise ~ trial_number)
emmeans(model2, pairwise ~ language:trial_type)
#model using milliseconds
model_data_7pre <- model_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "pre-switch")
model_7pre <- glmer((Target / Target_plus_Distractor) ~ language * trial_number + (1 | recording_name), data = model_data_7pre, weights = Target_plus_Distractor, family = "binomial")
summary(model_7pre)
#model using seconds
model_data_7pre_s <- model_data %>%
filter(age_group == "7 months") %>%
filter(trial_type == "pre-switch") %>%
mutate(Target = Target / 1000) %>%
mutate(Distractor = Distractor / 1000) %>%
mutate(Target_plus_Distractor = Target + Distractor)
model_7pre_s <- glmer((Target / Target_plus_Distractor) ~ language * trial_number + (1 | recording_name), data = model_data_7pre_s, weights = Target_plus_Distractor, family = "binomial")
summary(model_7pre_s)
load("tobii_ts_data.Rda")
View(huge_data_cleaned)
unique(huge_data_cleaned$trial_num)
load("tobii_ts_data.Rda")
proportion_trials <- inner_join(tobii_ts_data, ms_list, by = "recording_name") %>% mutate(recording_name = as.factor(recording_name))
load("tobii_ts_data.Rda")
proportion_trials <- inner_join(tobii_ts_data, ms_list, by = "recording_name") %>% mutate(recording_name = as.factor(recording_name))
proportion_summary <- proportion_trials %>%
filter(target + distractor == 1) %>%
group_by(trial_type, language, ts_rescaled, trial_num) %>%
summarise(target = mean(target, na.rm = TRUE),
distractor = mean(distractor, na.rm = TRUE)) %>%
mutate(proportion_to_target = target / (target + distractor)) %>%
gather(region, looking, target, distractor)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point() +
facet_grid(cols = vars(trial_type), rows = vars(trial_num))
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point()
View(tobii_ts_data)
View(proportion_summary)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point() +
xlim(2000, 6000)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point() +
xlim(2000, 6000) +
facet_grid(trial_type ~ trial_num)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point() +
xlim(2000, 6000)
library(ggplot2)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, col = region)) +
geom_point()
View(proportion_summary)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, color = region)) +
theme_void() +
geom_point() +
xlim(2000, 6000) +
facet_grid(trial_type ~ trial_num)
unique(proportion_summary$region)
class(proportion_summary$ts_rescaled)
class(proportion_summary$looking)
proportion_trials %>% filter(trial_num == 19) %>% select(recording_name)
proportion_trials %>% filter(trial_num == 10) %>% select(recording_name)
S14 <- proportion_trials %>% filter(recording_name == "CogControl20_S14_42456")
View(S14)
S14 <- S14 %>% filter(trial_num == 1 | trial_num == 10)
View(S14)
proportion_trials <- inner_join(tobii_ts_data, ms_list, by = "recording_name") %>%
mutate(recording_name = as.factor(recording_name)) %>%
filter(trial_num <= 9)
proportion_summary <- proportion_trials %>%
filter(target + distractor == 1) %>%
group_by(trial_type, language, ts_rescaled, trial_num) %>%
summarise(target = mean(target, na.rm = TRUE),
distractor = mean(distractor, na.rm = TRUE)) %>%
mutate(proportion_to_target = target / (target + distractor)) %>%
gather(region, looking, target, distractor)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, color = region)) +
geom_point() +
xlim(2000, 6000) +
facet_grid(trial_type ~ trial_num)
#this code is mostly copied from the rpubs link above, to try to get a similar graph
proportion_summary <- proportion_trials %>%
filter(target + distractor == 1) %>%
group_by(trial_type, language, ts_rescaled, trial_num) %>%
summarise(target = mean(target, na.rm = TRUE),
distractor = mean(distractor, na.rm = TRUE)) %>%
mutate(proportion_to_target = target / (target + distractor)) %>%
gather(region, looking, target, distractor)
ggplot(proportion_summary, aes(x = ts_rescaled, y = looking, color = region)) +
geom_point() +
facet_grid(trial_num ~ trial_type)
getwd()
here::here()
getwd()
## Read tobii data
tobii_data_order1 <- read_csv(here("data", "2019-10-24_CogControl_tobii_data_ORDER1.csv", na = "-")) %>% mutate(order = "1") %>% filter(X1 != "All Recordings")
## Read tobii data
tobii_data_order1 <- read_csv(here("data", "2019-10-24_CogControl_tobii_data_ORDER1.csv"), na = "-") %>% mutate(order = "1") %>% filter(X1 != "All Recordings")
tobii_data_order2 <- read_csv(here("data", "2019-10-24_CogControl_tobii_data_ORDER2.csv"), na = "-") %>% mutate(order = "2") %>% filter(X1 != "All Recordings")
## Read in master_subject_list
ms_list <- read_csv(here("data", "2019_CogControl_MSL.csv"), na = "-") %>%
separate(lang.group,into = c("language", "group")) %>%
filter(keeper == 1)
## Read tobii data
tobii_data_order1 <- read_csv(here("data", "2019-10-24_CogControl_tobii_data_ORDER1.csv"), na = "-") %>% mutate(order = "1") %>% filter(X1 != "All Recordings")
tobii_data_order2 <- read_csv(here("data", "2019-10-24_CogControl_tobii_data_ORDER2.csv"), na = "-") %>% mutate(order = "2") %>% filter(X1 != "All Recordings")
## Read in master_subject_list
ms_list <- read_csv(here("data", "2019_CogControl_MSL.csv"), na = "-") %>%
separate(lang.group,into = c("language", "group")) %>%
filter(keeper == 1)
load(here("data", "tobii_ts_data.Rda"))
